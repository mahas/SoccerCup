package view;

import model.Usuario;
import model.Ruta;
import model.Trayecto;
import model.ReporteViajes;
import model.Precio;
import javax.swing.JOptionPane;
import controller.TransporteController;
import java.awt.BorderLayout;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import model.Exportar;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author imac
 */
public class frmTransportdora extends javax.swing.JFrame {

    TransporteController controlador = new TransporteController();
    ArrayList<Usuario> listaUsuarios = new ArrayList<>();
    ArrayList<Precio> listaPrecios = new ArrayList<>();
    ArrayList<Ruta> listaRutas = new ArrayList<>();
    ArrayList<Trayecto> listaTrayectos = new ArrayList<>();
    ArrayList<ReporteViajes> listaReporteViajes = new ArrayList<>();
    
    
    public frmTransportdora() {
        
        initComponents();
        this.setLocationRelativeTo(null);// Lanza la vista en el centro de la pantaya.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstListaUsuarios = new javax.swing.JList<>();
        btnCrearUsuario = new javax.swing.JButton();
        btnBuscarUsuario = new javax.swing.JButton();
        btnActualizarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdUsuario = new javax.swing.JTextField();
        txtNombreUsuario = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnActualizarViaje = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstListaRutas = new javax.swing.JList<>();
        btnBuscarViaje = new javax.swing.JButton();
        cbxUsuario = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        btnVaciarTablaRutas = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbxPrecios = new javax.swing.JComboBox<>();
        txtIdRuta = new javax.swing.JTextField();
        btnCrearViaje = new javax.swing.JButton();
        btnEliminarViaje = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cbxTrayectos = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblExportar = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pnlPie = new javax.swing.JPanel();
        btnGraficos = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        pnlBar = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jScrollPane1.setViewportView(lstListaUsuarios);

        btnCrearUsuario.setText("Crear");
        btnCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearUsuarioActionPerformed(evt);
            }
        });

        btnBuscarUsuario.setText("Buscar");
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        btnActualizarUsuario.setText("Actualizar");
        btnActualizarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setText("Eliminar");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        jLabel1.setText("id Usuario");

        jLabel2.setText("Nombre usuario");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(51, 51, 51)
                                .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCrearUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnActualizarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 294, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearUsuario)
                    .addComponent(btnBuscarUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizarUsuario)
                    .addComponent(btnEliminarUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Usuarios", jPanel1);

        btnActualizarViaje.setText("Actualizar");
        btnActualizarViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarViajeActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(lstListaRutas);

        btnBuscarViaje.setText("Buscar");
        btnBuscarViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarViajeActionPerformed(evt);
            }
        });

        jLabel9.setText("Usuario:");

        btnVaciarTablaRutas.setText("Vaciar Tabla");
        btnVaciarTablaRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaciarTablaRutasActionPerformed(evt);
            }
        });

        jLabel10.setText("Id Ruta:");

        jLabel12.setText("Precio:");

        cbxPrecios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manizales - Neira - 3.000", "Manizales - Aranzasu - 4.500", "Manizales - Salamina - 11.000", "Manizales - Pácora - 17.000", "Manizales - Aguadas - 25.000" }));
        cbxPrecios.setToolTipText("");
        cbxPrecios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPreciosActionPerformed(evt);
            }
        });

        btnCrearViaje.setText("Crear");
        btnCrearViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearViajeActionPerformed(evt);
            }
        });

        btnEliminarViaje.setText("Eliminar");
        btnEliminarViaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarViajeActionPerformed(evt);
            }
        });

        jLabel13.setText("Ruta:");

        cbxTrayectos.setToolTipText("");
        cbxTrayectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTrayectosActionPerformed(evt);
            }
        });

        tblExportar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblExportar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExportarMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblExportar);

        jLabel3.setText("Trayectos:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(51, 51, 51)
                                .addComponent(txtIdRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(151, 151, 151))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel9))
                                .addGap(226, 239, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cbxUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxTrayectos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxPrecios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnCrearViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnBuscarViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnActualizarViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnEliminarViaje, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnVaciarTablaRutas)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(89, 89, 89))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtIdRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearViaje)
                    .addComponent(btnBuscarViaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizarViaje)
                    .addComponent(btnEliminarViaje))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cbxUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnVaciarTablaRutas)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbxTrayectos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbxPrecios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("Rutas", jPanel2);

        pnlPie.setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout pnlPieLayout = new javax.swing.GroupLayout(pnlPie);
        pnlPie.setLayout(pnlPieLayout);
        pnlPieLayout.setHorizontalGroup(
            pnlPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        pnlPieLayout.setVerticalGroup(
            pnlPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        btnGraficos.setText("Ver Gráfico");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlPie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(btnGraficos)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGraficos)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Gráfico 1", jPanel3);

        pnlBar.setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout pnlBarLayout = new javax.swing.GroupLayout(pnlBar);
        pnlBar.setLayout(pnlBarLayout);
        pnlBarLayout.setHorizontalGroup(
            pnlBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        pnlBarLayout.setVerticalGroup(
            pnlBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(pnlBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(pnlBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gráfico 2", jPanel4);

        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jButton1)
                .addContainerGap(387, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jButton1)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Exportar", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearUsuarioActionPerformed
        String nombre = txtNombreUsuario.getText();
        boolean seInserto = controlador.insertUsuario(nombre);
        if (seInserto) {
            JOptionPane.showMessageDialog(this, "El usuario se insertó correctamente");
        }
        else{
            JOptionPane.showMessageDialog(this, "El usuario no se insertó");
        }
        llenarListaUsuarios();
    }//GEN-LAST:event_btnCrearUsuarioActionPerformed

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        int id_usuario = Integer.parseInt(txtIdUsuario.getText());
        Usuario usuario = controlador.findUsuario(id_usuario);
        if(usuario == null){
            JOptionPane.showMessageDialog(this, "Usuario no encontrado");
        }
        else{
            txtNombreUsuario.setText(usuario.nombreUsuario);
        }
    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void btnActualizarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarUsuarioActionPerformed
        int id = Integer.parseInt(txtIdUsuario.getText());
        String nombre = txtNombreUsuario.getText();
        if(controlador.updateUsuario(id, nombre)){
            JOptionPane.showMessageDialog(this, "El usuario se actualizo correctamente");
        }
        else{
            JOptionPane.showMessageDialog(this, "El usuario no se actualizo");
        }
        llenarListaUsuarios();
    }//GEN-LAST:event_btnActualizarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        int id = Integer.parseInt(txtIdUsuario.getText());
        if(JOptionPane.showConfirmDialog(this, "Desea eliminar este usuario") == 0){
            if(controlador.deleteUsuario(id)){
                JOptionPane.showMessageDialog(this, "El usuario se elimino");
            }
            else{
                JOptionPane.showMessageDialog(this, "El usuario no se elimino");
            }
        }
        llenarListaUsuarios();
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnActualizarViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarViajeActionPerformed
       int id_rt = Integer.parseInt(txtIdRuta.getText());
        Trayecto trayecto = (Trayecto) cbxTrayectos.getSelectedItem();
        String nombre = trayecto.nombre;
        int id_tr = trayecto.id_trayecto;
        Usuario usuario = (Usuario) cbxUsuario.getSelectedItem();
        String nomUs = usuario.nombreUsuario;
        int id_usu = usuario.id_usuario;
        Precio precio = (Precio) cbxPrecios.getSelectedItem();
        int precioId = precio.precioVenta;
 
        if(controlador.updateRuta(id_tr, id_usu, nombre,  precioId, nomUs, id_rt)){
            JOptionPane.showMessageDialog(this, "El ruta se actualizó correctamente");
        }
        else{
            JOptionPane.showMessageDialog(this, "El ruta no se actualizó");
        }
        llenarListaRutas();
        llenarListaTrayectos();
        cargarGrafico();
        llenarTablaExportar();
       
    }//GEN-LAST:event_btnActualizarViajeActionPerformed

    private void btnBuscarViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarViajeActionPerformed
        int id = Integer.parseInt(txtIdRuta.getText());
        Ruta ruta = controlador.findRuta(id);
        if(ruta == null){
            JOptionPane.showMessageDialog(this, "Ruta no encontrado");
        }
        else{
            //txtNombreRuta.setText(ruta.nombre);
            //  txtDtEquipo.setText(equipo.dt);
            DefaultComboBoxModel modelo = (DefaultComboBoxModel) cbxUsuario.getModel();
            for (int i = 0; i < modelo.getSize(); i++) {
                Usuario usuario = (Usuario) modelo.getElementAt(i);
                
                if(usuario.id_usuario == ruta.id_usuario){
                    cbxUsuario.setSelectedItem(usuario);
                }
            }
            DefaultComboBoxModel modelo2 = (DefaultComboBoxModel) cbxTrayectos.getModel();
            
            for (int i = 0; i < modelo2.getSize(); i++) {
                Trayecto trayecto = (Trayecto) modelo2.getElementAt(i);
                //JOptionPane.showMessageDialog(this, trayecto.id_trayecto + ", " +  ruta.id_trayecto ); 
                if(trayecto.id_trayecto == ruta.id_trayecto){
                   cbxTrayectos.setSelectedItem(trayecto);
                   
                    
                    
                }
            }
            
            DefaultComboBoxModel modelo3 = (DefaultComboBoxModel) cbxPrecios.getModel();
            
            for (int i = 0; i < modelo3.getSize(); i++) {
                Precio precio = (Precio) modelo3.getElementAt(i);
                if(precio.id_trayecto == ruta.id_trayecto){
                   
                    cbxPrecios.setSelectedItem(precio);
                    
                    
                }
            }           
        }
    }//GEN-LAST:event_btnBuscarViajeActionPerformed

    private void btnVaciarTablaRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaciarTablaRutasActionPerformed
        String mensaje = "¿Realmente desea vaciar toda la lista? \n Esta acción no se puede deshacer.";
        int clave = 123;
        if(JOptionPane.showConfirmDialog(this, mensaje)== 0){
            int m = Integer.parseInt(JOptionPane.showInputDialog("Insertar la clave", "clave secreta"));
            if (clave == m ){
                controlador.deleteRutaAll();
                llenarListaRutas();
                llenarTablaExportar();
                JOptionPane.showMessageDialog(this, "La tabla se eliminó correctamente");
            }else{
                JOptionPane.showMessageDialog(this, "Clave incorrecta");

            }
        }
    }//GEN-LAST:event_btnVaciarTablaRutasActionPerformed

    private void cbxPreciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPreciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxPreciosActionPerformed

    
    private void btnCrearViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearViajeActionPerformed
        //String nombre = txtNombreRuta.getText();
          Usuario usuario = (Usuario) cbxUsuario.getSelectedItem();
          Trayecto trayecto = (Trayecto) cbxTrayectos.getSelectedItem();
          //String nomTray = (String) cbxTrayectos.getSelectedItem();
          Precio precio = (Precio) cbxPrecios.getSelectedItem();
          int usuarioId = usuario.id_usuario;
          int trayectoId = trayecto.id_trayecto;
          int precioActual = precio.precioVenta;
          String nomTrayecto = trayecto.nombre;
          String nomUsuario = usuario.nombreUsuario;
          
        if(controlador.insertRuta(trayectoId, usuarioId, nomTrayecto, precioActual, nomUsuario)){
     // if(controlador.insertRuta(trayectoId, usuarioId, trayecto +"",3000)){
           JOptionPane.showMessageDialog(this, "El viaje se insertó correctamente");
          }
      else{
           JOptionPane.showMessageDialog(this, "El viaje no se insertó");
        }
        llenarListaRutas();
        llenarListaTrayectos();
        cargarGrafico();
        llenarTablaExportar();
        
    }//GEN-LAST:event_btnCrearViajeActionPerformed

    private void btnEliminarViajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarViajeActionPerformed
        int id = Integer.parseInt(txtIdRuta.getText());
        if(JOptionPane.showConfirmDialog(this, "¿Realmente desea eliminar esta ruta?") == 0){
            if(controlador.deleteRuta(id)){
                JOptionPane.showMessageDialog(this, "La ruta se eliminó correctamente");
            }
            else{
                JOptionPane.showMessageDialog(this, "La ruta no se eliminó");
            }
        }
        llenarListaRutas();
        llenarTablaExportar();
    }//GEN-LAST:event_btnEliminarViajeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    llenarListaRutas();
    llenarListaUsuarios();
    llenarListaTrayectos();
    llenarListaPrecios();
    cargarGrafico();
    llenarTablaExportar();
        
    }//GEN-LAST:event_formWindowOpened

    private void cbxTrayectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTrayectosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTrayectosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        generarReporte();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblExportarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExportarMouseClicked
       /* int fila = tblExportar.getSelectedRow();
        int id = (int)tblExportar.getValueAt(fila, 0);
        buscarEquipo(id);*/
    }//GEN-LAST:event_tblExportarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTransportdora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTransportdora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTransportdora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTransportdora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTransportdora().setVisible(true);
            }
        });
    }

    
    public void llenarListaUsuarios(){
        DefaultListModel modelo = new DefaultListModel();
        DefaultComboBoxModel modelo2 = new DefaultComboBoxModel();
        ArrayList<Usuario> listaUsuarios = controlador.selectUsuarios();
        for (Usuario usuario : listaUsuarios) {
            modelo.addElement(usuario);
            modelo2.addElement(usuario);
        }
        lstListaUsuarios.setModel(modelo);
        cbxUsuario.setModel(modelo2);
            int total = 1000;

String textoTotal= Integer.toString(total);
     //   jTextField1.setText(textoTotal); 
       // JOptionPane.showMessageDialog(this, textoTotal);
            }
        
    public void llenarListaRutas(){
        DefaultListModel modelo = new DefaultListModel();
        DefaultComboBoxModel modelo2 = new DefaultComboBoxModel();
        ArrayList<Ruta> listaRutas = controlador.selectRutas();
        for (Ruta ruta : listaRutas) {
            modelo.addElement(ruta);
           modelo2.addElement(ruta);
        }
        lstListaRutas.setModel(modelo);
       // cbxRutas.setModel(modelo2);
        
    }
    
        public void llenarListaTrayectos(){
        DefaultListModel modelo = new DefaultListModel();
        DefaultComboBoxModel modelo2 = new DefaultComboBoxModel();
        ArrayList<Trayecto> listaTrayectos = controlador.selectTrayectos();
        for (Trayecto trayecto : listaTrayectos) {
           modelo.addElement(trayecto);
           modelo2.addElement(trayecto);
          
        }
    //lstListaRutas.setModel(modelo);
        cbxTrayectos.setModel(modelo2);
        
    }
        
    public void llenarListaPrecios(){
        DefaultListModel modelo = new DefaultListModel();
        DefaultComboBoxModel modelo2 = new DefaultComboBoxModel();
        ArrayList<Precio> listaPrecios = controlador.selectPrecios();
        for (Precio precio : listaPrecios) {
            modelo.addElement(precio);
            modelo2.addElement(precio);
        }
        //lstListaUsuarios.setModel(modelo);
        cbxPrecios.setModel(modelo2);
            }   
    
       public void llenarTotalVentas(){
        DefaultListModel modelo = new DefaultListModel();
        ArrayList<Precio> listaPrecios = controlador.selectPrecios();
        for (Precio precio : listaPrecios) {
            modelo.addElement(precio);
          
        }
        //lstListaUsuarios.setModel(modelo);
      //  cbxPrecios.setModel(modelo2);
            }  
        
       

       
//====================GRÁFICAS=====================================
    public void cargarGrafico(){
        DefaultPieDataset pieDataSet = new DefaultPieDataset();
        DefaultCategoryDataset barDataSet = new DefaultCategoryDataset();
        ArrayList<ReporteViajes> listaRE = controlador.selectReporteViajes();
        for (ReporteViajes re : listaRE) {
            
            pieDataSet.setValue(re.ruta, re.cantidad);
            barDataSet.setValue(re.usuarios, re.ruta+"", "Cantidad");
            JOptionPane.showMessageDialog(this, re.ruta);
            
        }
        JFreeChart pieChart = ChartFactory.createPieChart("Ingresos por destino", pieDataSet);
        ChartPanel pieChartPanel = new ChartPanel(pieChart);
        pnlPie.removeAll();
        pnlPie.setLayout(new BorderLayout());
        pnlPie.add(pieChartPanel, BorderLayout.CENTER);
        pnlPie.validate();
              
       JFreeChart barChart = ChartFactory.createBarChart("Usuarios por trayecto", "Trayecto",
        "Usuarios", barDataSet, PlotOrientation.HORIZONTAL, true, true, true);
        ChartPanel barChartPanel = new ChartPanel(barChart);
        pnlBar.removeAll();
        pnlBar.setLayout(new BorderLayout());
        pnlBar.add(barChartPanel, BorderLayout.CENTER);
        pnlBar.validate();
        
        int total = 0;
    for(ReporteViajes re : listaRE) {
        total = total + re.cantidad;
}
//cbxDinero.setText("total+"); 
    }        
    
// ======================EXCEL======================================
    
    public void generarReporte(){
        HSSFWorkbook book = new HSSFWorkbook();
        HSSFSheet sheet = book.createSheet("Trayectos");
        HSSFRow headerRow = sheet.createRow(0);
        CellStyle headerCellStyle = book.createCellStyle();
        Font headerFont = book.createFont();
        headerFont.setBold(true);
        headerCellStyle.setFont(headerFont);
        Cell headerCell = headerRow.createCell(0);
        headerCell = headerRow.createCell(0);
        headerCell.setCellValue("Destino");
        headerCell.setCellStyle(headerCellStyle);
        headerCell = headerRow.createCell(1);
        headerCell.setCellValue("Valos pasaje");
        headerCell.setCellStyle(headerCellStyle);
        headerCell = headerRow.createCell(2);
        headerCell.setCellValue("Cantidad pasajeros");
        headerCell.setCellStyle(headerCellStyle);
        headerCell = headerRow.createCell(3);
        headerCell.setCellValue("Total");
        headerCell.setCellStyle(headerCellStyle);        
        ArrayList<Exportar> listaExportar = controlador.selectTotal();
        //for(int i = 0; i < listaRutas.size(); i++){
        for(int i = 0; i < listaExportar.size(); i++){
            Exportar exportar = listaExportar.get(i);
            HSSFRow dataRow = sheet.createRow(i + 1);
            dataRow.createCell(0).setCellValue(exportar.ruta);
//            dataRow.createCell(2).setCellValue(ruta.dt);
            //ArrayList<Precio> listaPrecios = controlador.selectPrecios();
           // Precio precio = listaPrecios.get(i);
            dataRow.createCell(1).setCellValue(exportar.precio);
           // ArrayList<ReporteViajes> listaReporteViajes = controlador.selectReporteViajes();
           // ReporteViajes reporteViajes = listaReporteViajes.get(i);
            dataRow.createCell(2).setCellValue(exportar.usuarios);
            dataRow.createCell(3).setCellValue(exportar.total);
            //JOptionPane.showMessageDialog(this, ruta.nombre);

        }    
            try {
                
                String path = JOptionPane.showInputDialog("¿Dónde deseas guardar el archivo?", "Usuarios/imac/Escritorio/Reporte.xls");
                OutputStream file = new FileOutputStream(path);
                book.write(file);
                file.close();
                JOptionPane.showMessageDialog(this, "El archivo se ha exportado correctamente");
            } catch (Exception ex) {
            }
        
    }
    
    //==========================TABLAS==============================
        public void llenarTablaExportar(){
        ArrayList<Exportar> listaExportar = controlador.selectTotal();
        int filas = listaExportar.size();
        int columnas = 5;
        Object[][] datos = new Object[filas][columnas];
        int global = 0;
        for (int i = 0; i < filas; i++) {
            Exportar exportar = listaExportar.get(i);
            datos[i][0] = exportar.usuarios;
            datos[i][1]  = exportar.ruta;
            datos[i][2] = exportar.precio;
           // Municipio municipio = controlador.findMunicipio(equipo.municipio_id);
            datos[i][3] = exportar.total;
            int granTotal = exportar.total;
             global      += granTotal;
            datos[i][4] = global;
        }
        Object[] encabezados = {"Pasajeros", "Trayecto", "Valor", "Total", "Acumulado"};
        DefaultTableModel modelo = new DefaultTableModel(datos, encabezados);
        tblExportar.setModel(modelo);
    }
    

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarUsuario;
    private javax.swing.JButton btnActualizarViaje;
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnBuscarViaje;
    private javax.swing.JButton btnCrearUsuario;
    private javax.swing.JButton btnCrearViaje;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnEliminarViaje;
    private javax.swing.JButton btnGraficos;
    private javax.swing.JButton btnVaciarTablaRutas;
    private javax.swing.JComboBox<String> cbxPrecios;
    private javax.swing.JComboBox<String> cbxTrayectos;
    private javax.swing.JComboBox<String> cbxUsuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> lstListaRutas;
    private javax.swing.JList<String> lstListaUsuarios;
    private javax.swing.JPanel pnlBar;
    private javax.swing.JPanel pnlPie;
    private javax.swing.JTable tblExportar;
    private javax.swing.JTextField txtIdRuta;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
